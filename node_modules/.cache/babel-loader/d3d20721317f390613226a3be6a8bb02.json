{"ast":null,"code":"var _jsxFileName = \"/home/khaled/dish/src/components/DishesOrdre/OrdreListToolbar.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport { Box, Button, Snackbar, Alert as MuiAlert } from '@material-ui/core';\nimport { useDishState, useDishDispatch } from '../../context/dishAppContext';\nimport { AddOrdre } from '../../services/DishServices';\nimport _ from 'loadsh';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Alert;\n\nconst OrdreListToolbar = props => {\n  _s();\n\n  const {\n    state: {\n      cart\n    }\n  } = useDishState();\n  const dispatch = useDishDispatch();\n  const TotalPrice = cart.dishes.map(({\n    price,\n    quantity\n  }) => {\n    return price * quantity;\n  }).reduce((curNumber, item) => {\n    return Number(curNumber) + Number(item);\n  }, 0);\n\n  const onAddOrdre = async () => {\n    const {\n      Info = []\n    } = await AddOrdre(cart.dishes);\n\n    const groupedInfo = _.groupBy(Info, 'status');\n\n    console.log(groupedInfo);\n  };\n\n  console.log(cart.dishes);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: true,\n      autoHideDuration: 12000,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        children: \"This is a success message!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, { ...props,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'flex-end'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          disabled: cart.dishes.length > 0 ? false : true,\n          onClick: onAddOrdre,\n          children: [\"Order Now \", TotalPrice, \" \\u20AC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OrdreListToolbar, \"aaw+gMZLUWeHFjUBq17GdNal+0E=\", false, function () {\n  return [useDishState, useDishDispatch];\n});\n\n_c2 = OrdreListToolbar;\nexport default OrdreListToolbar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"OrdreListToolbar\");","map":{"version":3,"sources":["/home/khaled/dish/src/components/DishesOrdre/OrdreListToolbar.js"],"names":["Box","Button","Snackbar","Alert","MuiAlert","useDishState","useDishDispatch","AddOrdre","_","props","OrdreListToolbar","state","cart","dispatch","TotalPrice","dishes","map","price","quantity","reduce","curNumber","item","Number","onAddOrdre","Info","groupedInfo","groupBy","console","log","vertical","horizontal","display","justifyContent","length"],"mappings":";;;AAAA;AACA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,QAAtB,EAAgCC,KAAK,IAAIC,QAAzC,QAAyD,mBAAzD;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,8BAA9C;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,OAAOC,CAAP,MAAc,QAAd;;;;AAEA,SAASL,KAAT,CAAeM,KAAf,EAAsB;AACpB,sBAAO,QAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC,QAAhC;AAAA,OAA6CA;AAA7C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAFQN,K;;AAIT,MAAMO,gBAAgB,GAAID,KAAD,IAAW;AAAA;;AAClC,QAAM;AACJE,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AADH,MAEFP,YAAY,EAFhB;AAGA,QAAMQ,QAAQ,GAAGP,eAAe,EAAhC;AAEA,QAAMQ,UAAU,GAAGF,IAAI,CAACG,MAAL,CAChBC,GADgB,CACZ,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAAyB;AAC5B,WAAOD,KAAK,GAAGC,QAAf;AACD,GAHgB,EAIhBC,MAJgB,CAIT,CAACC,SAAD,EAAYC,IAAZ,KAAqB;AAC3B,WAAOC,MAAM,CAACF,SAAD,CAAN,GAAoBE,MAAM,CAACD,IAAD,CAAjC;AACD,GANgB,EAMd,CANc,CAAnB;;AAOA,QAAME,UAAU,GAAG,YAAY;AAC7B,UAAM;AAAEC,MAAAA,IAAI,GAAG;AAAT,QAAgB,MAAMjB,QAAQ,CAACK,IAAI,CAACG,MAAN,CAApC;;AACA,UAAMU,WAAW,GAAGjB,CAAC,CAACkB,OAAF,CAAUF,IAAV,EAAgB,QAAhB,CAApB;;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACD,GAJD;;AAKAE,EAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAI,CAACG,MAAjB;AACA,sBACE;AAAA,4BACE,QAAC,QAAD;AACE,MAAA,IAAI,EAAE,IADR;AAEE,MAAA,gBAAgB,EAAE,KAFpB;AAGE,MAAA,YAAY,EAAE;AAAEc,QAAAA,QAAQ,EAAE,KAAZ;AAAmBC,QAAAA,UAAU,EAAE;AAA/B,OAHhB;AAAA,6BAKE,QAAC,KAAD;AAAQ,QAAA,QAAQ,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,GAAD,OAASrB,KAAT;AAAA,6BACE,QAAC,GAAD;AACE,QAAA,EAAE,EAAE;AACFsB,UAAAA,OAAO,EAAE,MADP;AAEFC,UAAAA,cAAc,EAAE;AAFd,SADN;AAAA,+BAME,QAAC,MAAD;AACE,UAAA,KAAK,EAAC,SADR;AAEE,UAAA,OAAO,EAAC,WAFV;AAGE,UAAA,QAAQ,EAAEpB,IAAI,CAACG,MAAL,CAAYkB,MAAZ,GAAqB,CAArB,GAAyB,KAAzB,GAAiC,IAH7C;AAIE,UAAA,OAAO,EAAEV,UAJX;AAAA,mCAMaT,UANb;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AA8BD,CAjDD;;GAAMJ,gB;UAGAL,Y,EACaC,e;;;MAJbI,gB;AAmDN,eAAeA,gBAAf","sourcesContent":["/* eslint-disable */\nimport { Box, Button, Snackbar, Alert as MuiAlert } from '@material-ui/core';\nimport { useDishState, useDishDispatch } from '../../context/dishAppContext';\nimport { AddOrdre } from '../../services/DishServices';\nimport _ from 'loadsh';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst OrdreListToolbar = (props) => {\n  const {\n    state: { cart }\n  } = useDishState();\n  const dispatch = useDishDispatch();\n\n  const TotalPrice = cart.dishes\n    .map(({ price, quantity }) => {\n      return price * quantity;\n    })\n    .reduce((curNumber, item) => {\n      return Number(curNumber) + Number(item);\n    }, 0);\n  const onAddOrdre = async () => {\n    const { Info = [] } = await AddOrdre(cart.dishes);\n    const groupedInfo = _.groupBy(Info, 'status');\n    console.log(groupedInfo);\n  };\n  console.log(cart.dishes);\n  return (\n    <>\n      <Snackbar\n        open={true}\n        autoHideDuration={12000}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <Alert  severity=\"success\">\n           This is a success message!\n       </Alert>\n      </Snackbar>\n      <Box {...props}>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end'\n          }}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            disabled={cart.dishes.length > 0 ? false : true}\n            onClick={onAddOrdre}\n          >\n            Order Now {TotalPrice} â‚¬\n          </Button>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default OrdreListToolbar;\n"]},"metadata":{},"sourceType":"module"}