{"ast":null,"code":"var _jsxFileName = \"/home/khaled/dish/src/components/DishesOrdre/OrdreListToolbar.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport { Box, Button, Snackbar, Alert as MuiAlert } from '@material-ui/core';\nimport { useDishState, useDishDispatch } from '../../context/dishAppContext';\nimport { AddOrdre } from '../../services/DishServices';\nimport _ from 'loadsh';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Alert;\n\nconst OrdreListToolbar = props => {\n  _s();\n\n  const {\n    state: {\n      cart\n    }\n  } = useDishState();\n  const dispatch = useDishDispatch();\n  const TotalPrice = cart.dishes.map(({\n    price,\n    quantity\n  }) => {\n    return price * quantity;\n  }).reduce((curNumber, item) => {\n    return Number(curNumber) + Number(item);\n  }, 0);\n\n  const onAddOrdre = async () => {\n    const {\n      Info = []\n    } = await AddOrdre(cart.dishes);\n\n    const groupedInfo = _.groupBy(Info, 'status');\n\n    console.log(groupedInfo);\n  };\n\n  console.log(cart.dishes);\n  return /*#__PURE__*/_jsxDEV(Box, { ...props,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n        open: true,\n        autoHideDuration: 6000,\n        onClose: () => console.log(\"closed\"),\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleClose,\n          severity: \"success\",\n          children: \"This is a success message!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        disabled: cart.dishes.length > 0 ? false : true,\n        onClick: onAddOrdre,\n        children: [\"Order Now \", TotalPrice, \" \\u20AC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrdreListToolbar, \"aaw+gMZLUWeHFjUBq17GdNal+0E=\", false, function () {\n  return [useDishState, useDishDispatch];\n});\n\n_c2 = OrdreListToolbar;\nexport default OrdreListToolbar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"OrdreListToolbar\");","map":{"version":3,"sources":["/home/khaled/dish/src/components/DishesOrdre/OrdreListToolbar.js"],"names":["Box","Button","Snackbar","Alert","MuiAlert","useDishState","useDishDispatch","AddOrdre","_","props","OrdreListToolbar","state","cart","dispatch","TotalPrice","dishes","map","price","quantity","reduce","curNumber","item","Number","onAddOrdre","Info","groupedInfo","groupBy","console","log","display","justifyContent","handleClose","length"],"mappings":";;;AAAA;AACA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,QAAtB,EAAgCC,KAAK,IAAIC,QAAzC,QAAyD,mBAAzD;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,8BAA9C;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,OAAOC,CAAP,MAAc,QAAd;;;AAEA,SAASL,KAAT,CAAeM,KAAf,EAAsB;AACpB,sBAAO,QAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC,QAAhC;AAAA,OAA6CA;AAA7C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAFQN,K;;AAIT,MAAMO,gBAAgB,GAAID,KAAD,IAAW;AAAA;;AAClC,QAAM;AACJE,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AADH,MAEFP,YAAY,EAFhB;AAGA,QAAMQ,QAAQ,GAAGP,eAAe,EAAhC;AAEA,QAAMQ,UAAU,GAAGF,IAAI,CAACG,MAAL,CAChBC,GADgB,CACZ,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAAyB;AAC5B,WAAOD,KAAK,GAAGC,QAAf;AACD,GAHgB,EAIhBC,MAJgB,CAIT,CAACC,SAAD,EAAYC,IAAZ,KAAqB;AAC3B,WAAOC,MAAM,CAACF,SAAD,CAAN,GAAoBE,MAAM,CAACD,IAAD,CAAjC;AACD,GANgB,EAMd,CANc,CAAnB;;AAOA,QAAME,UAAU,GAAG,YAAY;AAC7B,UAAM;AAAEC,MAAAA,IAAI,GAAG;AAAT,QAAgB,MAAMjB,QAAQ,CAACK,IAAI,CAACG,MAAN,CAApC;;AACA,UAAMU,WAAW,GAAGjB,CAAC,CAACkB,OAAF,CAAUF,IAAV,EAAgB,QAAhB,CAApB;;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACD,GAJD;;AAKAE,EAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAI,CAACG,MAAjB;AACA,sBACE,QAAC,GAAD,OAASN,KAAT;AAAA,2BACE,QAAC,GAAD;AACE,MAAA,EAAE,EAAE;AACFoB,QAAAA,OAAO,EAAE,MADP;AAEFC,QAAAA,cAAc,EAAE;AAFd,OADN;AAAA,8BAMG,QAAC,QAAD;AAAU,QAAA,IAAI,EAAE,IAAhB;AAAsB,QAAA,gBAAgB,EAAE,IAAxC;AAA8C,QAAA,OAAO,EAAE,MAAIH,OAAO,CAACC,GAAR,CAAY,QAAZ,CAA3D;AAAA,+BACD,QAAC,KAAD;AAAO,UAAA,OAAO,EAAEG,WAAhB;AAA6B,UAAA,QAAQ,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA,cANH,eAWE,QAAC,MAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,QAAQ,EAAEnB,IAAI,CAACG,MAAL,CAAYiB,MAAZ,GAAqB,CAArB,GAAyB,KAAzB,GAAiC,IAH7C;AAIE,QAAA,OAAO,EAAET,UAJX;AAAA,iCAMaT,UANb;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA3CD;;GAAMJ,gB;UAGAL,Y,EACaC,e;;;MAJbI,gB;AA6CN,eAAeA,gBAAf","sourcesContent":["/* eslint-disable */\nimport { Box, Button, Snackbar, Alert as MuiAlert } from '@material-ui/core';\nimport { useDishState, useDishDispatch } from '../../context/dishAppContext';\nimport { AddOrdre } from '../../services/DishServices';\nimport _ from 'loadsh';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst OrdreListToolbar = (props) => {\n  const {\n    state: { cart }\n  } = useDishState();\n  const dispatch = useDishDispatch();\n\n  const TotalPrice = cart.dishes\n    .map(({ price, quantity }) => {\n      return price * quantity;\n    })\n    .reduce((curNumber, item) => {\n      return Number(curNumber) + Number(item);\n    }, 0);\n  const onAddOrdre = async () => {\n    const { Info = [] } = await AddOrdre(cart.dishes);\n    const groupedInfo = _.groupBy(Info, 'status');\n    console.log(groupedInfo);\n  };\n  console.log(cart.dishes);\n  return (\n    <Box {...props}>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end'\n        }}\n      >\n         <Snackbar open={true} autoHideDuration={6000} onClose={()=>console.log(\"closed\")}>\n        <Alert onClose={handleClose} severity=\"success\">\n          This is a success message!\n        </Alert>\n      </Snackbar>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          disabled={cart.dishes.length > 0 ? false : true}\n          onClick={onAddOrdre}\n        >\n          Order Now {TotalPrice} â‚¬\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default OrdreListToolbar;\n"]},"metadata":{},"sourceType":"module"}