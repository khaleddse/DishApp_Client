{"ast":null,"code":"var _jsxFileName = \"/home/khaled/dish/src/components/DishesOrdre/OrdreListToolbar.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport { Box, Button, Alert } from '@material-ui/core';\nimport { useDishState, useDishDispatch } from '../../context/dishAppContext';\nimport { AddOrdre } from '../../services/DishServices';\nimport _ from 'loadsh';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OrdreListToolbar = props => {\n  _s();\n\n  const Navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [successOrder, setSuccessOrder] = useState({});\n  const [failedOrder, setFailedOrder] = useState({});\n  const {\n    state: {\n      cart\n    }\n  } = useDishState();\n  const dispatch = useDishDispatch();\n  const TotalPrice = cart.dishes.map(({\n    price,\n    quantity\n  }) => {\n    return price * quantity;\n  }).reduce((curNumber, item) => {\n    return Number(curNumber) + Number(item);\n  }, 0);\n\n  const onAddOrdre = async () => {\n    setIsLoading(true);\n    const {\n      Info = []\n    } = await AddOrdre(cart.dishes);\n\n    const {\n      Ordred = {},\n      notOrdred = {}\n    } = _.groupBy(Info, 'status');\n\n    console.log(Ordred, notOrdred);\n    setIsLoading(false);\n    setSuccessOrder(Ordred);\n    setFailedOrder(notOrdred);\n    setTimeout(() => {\n      Navigate('/all-dishes');\n    }, 6000);\n  };\n\n  console.log(cart.dishes);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!_.isEmpty(failedOrder) && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: [failedOrder.map(({\n        dish\n      }) => dish).join(', '), ' ', failedOrder.length > 1 ? 'are not Ordred' : 'is not Ordred']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), !_.isEmpty(successOrder) && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      children: [successOrder.map(({\n        dish\n      }) => dish).join(', '), ' ', successOrder.length > 1 ? 'are Ordred' : 'is Ordred']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, { ...props,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'flex-end'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          disabled: (cart.dishes.length > 0 ? false : true) || isLoading,\n          onClick: onAddOrdre,\n          children: [\"Order Now \", TotalPrice, \" \\u20AC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OrdreListToolbar, \"kFQeeq/ouKM+gD/P+2yrf57BKhw=\", false, function () {\n  return [useNavigate, useDishState, useDishDispatch];\n});\n\n_c = OrdreListToolbar;\nexport default OrdreListToolbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdreListToolbar\");","map":{"version":3,"sources":["/home/khaled/dish/src/components/DishesOrdre/OrdreListToolbar.js"],"names":["Box","Button","Alert","useDishState","useDishDispatch","AddOrdre","_","useNavigate","useState","OrdreListToolbar","props","Navigate","isLoading","setIsLoading","successOrder","setSuccessOrder","failedOrder","setFailedOrder","state","cart","dispatch","TotalPrice","dishes","map","price","quantity","reduce","curNumber","item","Number","onAddOrdre","Info","Ordred","notOrdred","groupBy","console","log","setTimeout","isEmpty","dish","join","length","display","justifyContent"],"mappings":";;;AAAA;AACA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,KAAtB,QAAmC,mBAAnC;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,8BAA9C;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AACJU,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AADH,MAEFhB,YAAY,EAFhB;AAGA,QAAMiB,QAAQ,GAAGhB,eAAe,EAAhC;AAEA,QAAMiB,UAAU,GAAGF,IAAI,CAACG,MAAL,CAChBC,GADgB,CACZ,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAAyB;AAC5B,WAAOD,KAAK,GAAGC,QAAf;AACD,GAHgB,EAIhBC,MAJgB,CAIT,CAACC,SAAD,EAAYC,IAAZ,KAAqB;AAC3B,WAAOC,MAAM,CAACF,SAAD,CAAN,GAAoBE,MAAM,CAACD,IAAD,CAAjC;AACD,GANgB,EAMd,CANc,CAAnB;;AAOA,QAAME,UAAU,GAAG,YAAY;AAC7BjB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAM;AAAEkB,MAAAA,IAAI,GAAG;AAAT,QAAgB,MAAM1B,QAAQ,CAACc,IAAI,CAACG,MAAN,CAApC;;AACA,UAAM;AAAEU,MAAAA,MAAM,GAAG,EAAX;AAAeC,MAAAA,SAAS,GAAG;AAA3B,QAAkC3B,CAAC,CAAC4B,OAAF,CAAUH,IAAV,EAAgB,QAAhB,CAAxC;;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ,EAAoBC,SAApB;AACApB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,IAAAA,eAAe,CAACiB,MAAD,CAAf;AACAf,IAAAA,cAAc,CAACgB,SAAD,CAAd;AACAI,IAAAA,UAAU,CAAC,MAAM;AACf1B,MAAAA,QAAQ,CAAC,aAAD,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAXD;;AAaAwB,EAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAI,CAACG,MAAjB;AACA,sBACE;AAAA,eACG,CAAChB,CAAC,CAACgC,OAAF,CAAUtB,WAAV,CAAD,iBACC,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAC,OAAhB;AAAA,iBACGA,WAAW,CAACO,GAAZ,CAAgB,CAAC;AAAEgB,QAAAA;AAAF,OAAD,KAAcA,IAA9B,EAAoCC,IAApC,CAAyC,IAAzC,CADH,EACmD,GADnD,EAEGxB,WAAW,CAACyB,MAAZ,GAAqB,CAArB,GAAyB,gBAAzB,GAA4C,eAF/C;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAOG,CAACnC,CAAC,CAACgC,OAAF,CAAUxB,YAAV,CAAD,iBACC,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAC,SAAhB;AAAA,iBACGA,YAAY,CAACS,GAAb,CAAiB,CAAC;AAAEgB,QAAAA;AAAF,OAAD,KAAcA,IAA/B,EAAqCC,IAArC,CAA0C,IAA1C,CADH,EACoD,GADpD,EAEG1B,YAAY,CAAC2B,MAAb,GAAsB,CAAtB,GAA0B,YAA1B,GAAyC,WAF5C;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eAaE,QAAC,GAAD,OAAS/B,KAAT;AAAA,6BACE,QAAC,GAAD;AACE,QAAA,EAAE,EAAE;AACFgC,UAAAA,OAAO,EAAE,MADP;AAEFC,UAAAA,cAAc,EAAE;AAFd,SADN;AAAA,+BAME,QAAC,MAAD;AACE,UAAA,KAAK,EAAC,SADR;AAEE,UAAA,OAAO,EAAC,WAFV;AAGE,UAAA,QAAQ,EAAE,CAACxB,IAAI,CAACG,MAAL,CAAYmB,MAAZ,GAAqB,CAArB,GAAyB,KAAzB,GAAiC,IAAlC,KAA2C7B,SAHvD;AAIE,UAAA,OAAO,EAAEkB,UAJX;AAAA,mCAMaT,UANb;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA,kBADF;AAiCD,CAhED;;GAAMZ,gB;UACaF,W,EAMbJ,Y,EACaC,e;;;KARbK,gB;AAkEN,eAAeA,gBAAf","sourcesContent":["/* eslint-disable */\nimport { Box, Button, Alert } from '@material-ui/core';\nimport { useDishState, useDishDispatch } from '../../context/dishAppContext';\nimport { AddOrdre } from '../../services/DishServices';\nimport _ from 'loadsh';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\n\nconst OrdreListToolbar = (props) => {\n  const Navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [successOrder, setSuccessOrder] = useState({});\n  const [failedOrder, setFailedOrder] = useState({});\n  const {\n    state: { cart }\n  } = useDishState();\n  const dispatch = useDishDispatch();\n\n  const TotalPrice = cart.dishes\n    .map(({ price, quantity }) => {\n      return price * quantity;\n    })\n    .reduce((curNumber, item) => {\n      return Number(curNumber) + Number(item);\n    }, 0);\n  const onAddOrdre = async () => {\n    setIsLoading(true);\n    const { Info = [] } = await AddOrdre(cart.dishes);\n    const { Ordred = {}, notOrdred = {} } = _.groupBy(Info, 'status');\n    console.log(Ordred, notOrdred);\n    setIsLoading(false);\n    setSuccessOrder(Ordred);\n    setFailedOrder(notOrdred);\n    setTimeout(() => {\n      Navigate('/all-dishes');\n    }, 6000);\n  };\n\n  console.log(cart.dishes);\n  return (\n    <>\n      {!_.isEmpty(failedOrder) && (\n        <Alert severity=\"error\">\n          {failedOrder.map(({ dish }) => dish).join(', ')}{' '}\n          {failedOrder.length > 1 ? 'are not Ordred' : 'is not Ordred'}\n        </Alert>\n      )}\n      {!_.isEmpty(successOrder) && (\n        <Alert severity=\"success\">\n          {successOrder.map(({ dish }) => dish).join(', ')}{' '}\n          {successOrder.length > 1 ? 'are Ordred' : 'is Ordred'}\n        </Alert>\n      )}\n      <Box {...props}>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end'\n          }}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            disabled={(cart.dishes.length > 0 ? false : true) || isLoading}\n            onClick={onAddOrdre}\n          >\n            Order Now {TotalPrice} â‚¬\n          </Button>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default OrdreListToolbar;\n"]},"metadata":{},"sourceType":"module"}